import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "~/styles/Home.module.css";
import { Grid } from "~/components/Grid/Grid";
import { generateNext } from "~/modules/rules/gameOfLife";
import { useCellMachineEngine } from "~/hooks/useCellMachineEngine";

const inter = Inter({ subsets: ["latin"] });

const ROWS = 35;
const COLUMNS = 35;

const initialGrid: IGrid = Array.from({ length: ROWS }, () =>
  Array.from({ length: COLUMNS }, () => 0)
);

export default function Home() {
  const {
    currentGrid,
    playing,
    onClickCell,
    onPlay,
    onGenerateNext,
    onMouseDown,
    countBordRef,
    onMouseOut,
    onResetGrid,
    onMouseMove,
    onChangeTickInterval,
    intervalCount,
    increaseGeneration,
  } = useCellMachineEngine(initialGrid, generateNext);

  return (
    <>
      <Head>
        <title>GameOfLife</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Grid
          onMouseDown={onMouseDown}
          onMouseOut={onMouseOut}
          onMouseMove={onMouseMove}
          onClickCell={onClickCell}
          data={currentGrid}
        />
        <div className="counter">
          <div className="count">
            <div>Поколений: {countBordRef.current}</div>
          </div>
        </div>

        <input
          onChange={(e) => increaseGeneration(e.target.valueAsNumber)}
          type="number"
        />
        <button onClick={onGenerateNext}>Generate next</button>
        <button onClick={onPlay}>{playing ? "Pause" : "Play"}</button>
        <button onClick={onResetGrid}>Reset Grid</button>
        <input
          type="range"
          min={30}
          max={1000}
          step={20}
          defaultValue={intervalCount}
          onChange={onChangeTickInterval}
        />
      </main>
    </>
  );
}
